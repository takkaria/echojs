#!/usr/bin/env node

'use strict';

var dotenv = require('dotenv');
dotenv.load();

var action = { type: "all" }
var moment = require('moment')

function parse_options() {
	// Parse options
	var next;

	for (var i in process.argv) {
		var arg = process.argv[i];

		// process command from previous
		if (next == "skip")
			next = null;
		else if (next == "ical") {
			action = { type: "ical", url: arg };
			next = null;
		} else if (next == "feed") {
			action = { type: "feed", id: arg };
			next = null;
		}

		// check content of args
		else if (arg == "node")
			next = "skip";
		else if (arg == "--debug")
			process.env.DEBUG = "echo:fetch"
		else if (arg == "--ical")
			next = "ical";
		else if (arg == "--feed")
			next = "feed";
		else if (arg == "--help" || arg == "-h") {
			console.log("feedfetcher here, reporting for duty");
			console.log("args:");
			console.log(" --debug       Turn debugging output on");
			console.log(" --ical <url>  Fetch specified ical feed");
			console.log(" --feed <id>   Fetch specified RSS/Atom feed");
			console.log(" --help        Display this message");
			process.exit();
		}
	}
}

parse_options();

var fetch = require('../lib/fetch')
var Feed = require('../models').Feed

// ============================================================ //

var calendars = [];

function eventError(error, list) {
	console.log("Error: " + error.message);
	if (list) {
		console.log(list);
	}
}

if (action.type == "ical") {
	fetch.ical({ url: action.url, error: eventError });
} else if (action.type == "feed") {
	Feed.findById(action.id)
		.then(feed => fetch.feed(feed));
} else {
	Feed.findAll()
		.then(feeds => feeds.forEach(fetch.feed));

	for (let cal of calendars) {
		fetch.ical(cal, eventError);
	}
}
